class Cloud
{
  float x;
  float y;
  float scl;
  float timeInitialized;
  //animation parameters
  float attack, decay, sustain, release;
  float moveSpeed;
  String[] animationState = {"attack", "decay", "sustain", "release"};
  String currentState;
  
  float maxSpeed = 5;
  float acceleration = 0.1;
  float growRate;

  boolean canBeDestroyed;
  
  public Cloud(float x, float y, float scl, float moveSpeed)
  {
    this.x = x;
    this.y = y;
    this.scl = scl;
    this.moveSpeed = moveSpeed;
    this.timeInitialized = millis();
    attack = 1000;
    decay = 500;
    sustain = 2000;
    release =1000;
    
    canBeDestroyed = false;
    
  }
  public void display()
  {
    noStroke();
    fill(255);
    ellipse(x, y, scl, scl);
    ellipse(x + scl/2, y, scl, scl);
    ellipse(x + scl, y, scl, scl);

    ellipse(x + scl/4, y-scl/2, scl, scl);
    ellipse(x + 3*scl/4, y-scl/2, scl, scl);
  }
  public void updateADSR()
  {
    float currentTime = millis();
    
    if(currentTime > timeInitialized + attack + decay + sustain + release)
    {
      //destroy cloud
      canBeDestroyed = true;
      println(canBeDestroyed);
    } 
    else if ( currentTime > timeInitialized + attack + decay + sustain)
    {
      currentState = "release";
    }
    else if ( currentTime > timeInitialized + attack + decay)
    {
      currentState = "sustain";
    }
    else if ( currentTime > timeInitialized + attack)
    {
      currentState = "decay";
    }
    else
    {
      currentState = "attack";
    }
    println(currentState);
    
    switch(currentState)
    {
    case "attack":
      moveSpeed += acceleration;
      growRate = 0.5;
      break;
      
    case "decay":
      moveSpeed -= acceleration;
      growRate = -0.2;
      break;
    
    case "sustain":
      growRate = 0;
      break;
    
    case "release":
      moveSpeed -= acceleration;
      growRate = -0.1;
      break;
    
    default:
      break;
    }
    if (moveSpeed > maxSpeed)
      moveSpeed = maxSpeed;
    if (moveSpeed < 0)
      moveSpeed = 0.1;
    if (scl < 0)
      scl = 0;
  }
public void move(String direction)
  {    
    if (direction == "right" || direction == "r")
    {
      this.x+= moveSpeed;
    } else if (direction == "left" || direction == "l")
    {
      this.x -= moveSpeed;
    } else
    {
      println("unrecognized direction");
    }
  }
  public void changeSize()
  {
    this.scl += growRate;
  }
}